#
# This script runs a series of node.js related tasks.
#
#  - Look up the node.js version specified by the application
#  - Install the required node.js version.
#  - Install the required npm version
#  - Run `npm install`
#
# Input vars:
#   nodejs_version (the version string required by the application)
#   npm_version (the desired NPM version)
#
# Side effect:
#   nodejs_preinstalled set to true if the desired nodejs is already installed, false otherwise
#

# Runs "node --version" and look for the version of Nodejs that we are
# targeting (defined as a fact nodejs_version).
#
- name : check if nodejs is installed
  shell: "node --version  | cut -c 2-"
  register: found_nodejs_version

- set_fact:
    nodejs_preinstalled: true
  when: found_nodejs_version.stdout == nodejs_version

- set_fact:
    nodejs_preinstalled: false
  when: found_nodejs_version.stdout != nodejs_version

- debug: msg="Found nodejs version {{nodejs_version}} - {{nodejs_preinstalled}}"


# Install specified version of node.js into the system
- name: add node.js rpm to yum
  shell: 'curl --silent --location https://rpm.nodesource.com/setup_4.x | bash -'
  when: nodejs_preinstalled == false

- name: install nodejs
  yum:
    name: "nodejs-{{ nodejs_version }}"
  when: nodejs_preinstalled == false

# Disable yum from updating node.js since we are locking down this version for
# the application.
- name: disable nodejs from yum repo
  replace: >
    dest=/etc/yum.repos.d/nodesource-el.repo
    regexp='enabled=1'
    replace='enabled=0'
    backup=yes
  when: nodejs_preinstalled == false

- name: install exact npm version
  shell: npm i -g npm@{{ npm_version }}
  when: nodejs_preinstalled == false

- name: set npm registry
  shell: npm set registry {{ npm_registry_url }}

# Run NPM install to download all the NPM packages and webpack to run the
# babel precompiler.
- name: npm install
  shell: npm install --production --no-optional
  args:
    chdir: "{{app_src}}/client"
